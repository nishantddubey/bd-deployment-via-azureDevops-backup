trigger:
- master

variables:
  azureServiceConnectionId: 'e4b61351-9cc5-4c7e-a0b5-5c1f71e64cf0'
  webAppName: 'bd-webapp'
  vmImageName: 'ubuntu-latest'
  environmentName: 'bd-webapp'
  projectRoot: $(System.DefaultWorkingDirectory)
  pythonVersion: '3.11.6'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      name: streamlit
      demands:
      - agent.name -equals sigmoid
    steps:

    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      name: streamlit
      demands:
      - agent.name -equals sigmoid
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : bd-webapp'
            inputs:
              azureSubscription: 'Azure subscription 1 (36d76072-c446-4cda-919a-17c59671a90e)'
              appType: 'webAppLinux'
              appName: '$(webAppName)'
              deployToSlotOrASE: true
              slotName: 'production'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              runtimeStack: 'PYTHON|3.11'
              startUpCommand: 'python -m streamlit run app.py --server.port 8000'
